gry <- "#939393"
gry_dk <- "#545454"
ylw <- "#aa8f00"
ylw_dk <- "#634806"
ong <- "#d47500"
ong_dk <- "#d35400"
red <- "#ef4836"
red_dk <- "#b50000"
ggplot(notebook_tib, aes(sex, arousal)) +
geom_point(size = 3, position = position_jitter(width = 0.05), colour = blu, alpha = 0.7) +
geom_boxplot(alpha = 0, colour = blu_dk) +
labs(x = "Biological sex", y = "Psychological arousal during film") +
andy.dsus()
ggplot(notebook_tib, aes(sex, arousal)) +
geom_point(size = 3, position = position_jitter(width = 0.05), colour = blu, alpha = 0.7) +
geom_boxplot(alpha = 0, colour = blu_dk) +
labs(x = "Biological sex", y = "Psychological arousal during film") +
theme_minimal()
ggplot(notebook_tib, aes(sex, arousal)) +
geom_point(size = 3, position = position_jitter(width = 0.05), colour = ong, alpha = 0.7) +
geom_boxplot(alpha = 0, colour = blu_dk) +
labs(x = "Biological sex", y = "Psychological arousal during film") +
theme_minimal()
ggplot(notebook_tib, aes(sex, arousal)) +
geom_point(size = 3, position = position_jitter(width = 0.05), colour = ong, alpha = 0.7) +
geom_boxplot(alpha = 0, colour = blu) +
labs(x = "Biological sex", y = "Psychological arousal during film") +
theme_minimal()
ggplot(note, aes(film, arousal)) +
geom_point(size = 3, position = position_jitter(width = 0.05), colour = ong, alpha = 0.7) +
geom_boxplot(alpha = 0, colour = blu) +
labs(x = "Title of film", y = "Psychological arousal during film") +
theme_minimal()
ggplot(notebook_tib, aes(film, arousal)) +
geom_point(size = 3, position = position_jitter(width = 0.05), colour = ong, alpha = 0.7) +
geom_boxplot(alpha = 0, colour = blu) +
labs(x = "Title of film", y = "Psychological arousal during film") +
theme_minimal()
ggplot(note, aes(sex, arousal, colour = film)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.1), size = 3, alpha = 0.6) +
geom_boxplot(alpha = 0) +
labs(x = "Biological sex", y = "Psychological arousal during film", colour = "Title of film") +
discovr::scale_color_power() +
theme_minimal()
ggplot(notebook_tib, aes(sex, arousal, colour = film)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.1), size = 3, alpha = 0.6) +
geom_boxplot(alpha = 0) +
labs(x = "Biological sex", y = "Psychological arousal during film", colour = "Title of film") +
discovr::scale_color_power() +
theme_minimal()
ggplot(notebook_tib, aes(sex, arousal, colour = film)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.1), size = 3, alpha = 0.6) +
geom_boxplot(alpha = 0) +
labs(x = "Biological sex", y = "Psychological arousal during film", colour = "Title of film") +
discovr::scale_color_ssoass() +
theme_minimal()
effectsize::omega_squared(notebook_afx, ci = 0.95, partial = FALSE)
report_f(x = notebook_car)
report_f(x = notebook_car, index = 3)
report_omega(model = notebook_afx, index = 2)
report_omega(model = notebook_afx, index = 1)
report_f(x = notebook_car, index = 4)
report_omega(model = notebook_afx, index = 3)
teach_tib <- discovr::teach_method
teach_tib
teach_tib <- discovr::teaching
teach_tib <- discovr::teaching
teach_tib
teach_afx <- afex::aov_4(mark ~ method*sex + (1|id), data = teach_tib)
detach("package:discovr", unload = TRUE)
remove.packages("discovr")
install.packages("/Volumes/alpha_lacertae/documents/academic/r_packages/discovr_0.1.5.7.tgz", repos = NULL, type = .Platform$pkgType)
teach_tib <- discovr::teaching
teach_tib
teach_afx <- afex::aov_4(mark ~ method*sex + (1|id), data = teach_tib)
teach_afx
contrasts(teach_tib$sex) <- contr.sum(2)
contrasts(teach_tib$method) <- contr.sum(2)
teach_lm <- lm(arousal ~ method*sex, data = teach_tib)
teach_lm <- lm(mark ~ method*sex, data = teach_tib)
car::Anova(teach_lm, type = 3)
report_f(teach_car, index = 3)
teach_lm <- lm(arousal ~ film*sex, data = teach_tib)
teach_lm <- lm(mark ~ method*sex, data = teach_tib)
teach_car <- car::Anova(teach_lm, type = 3)
report_f(teach_car, index = 3)
report_f(teach_car, index = 2)
report_f(teach_car, index = 2)
report_f(teach_car, index = 4)
report_f(teach_car, index = 3)
report_f(teach_car, index = 2)
report_f(teach_car, index = 4)
ggplot(teach_tib, aes(sex, mark)) +
geom_point(size = 3, position = position_jitter(width = 0.05),  colour = ong, alpha = 0.7) +
geom_boxplot(alpha = 0, colour = blu) +
labs(x = "Biological sex", y = "Mark on exam (out of 20)") +
theme_minimal()
ggplot(teach_tib, aes(sex, mark)) +
geom_point(size = 3, position = position_jitter(width = 0.05),  colour = ong, alpha = 0.7) +
stat_summary(y.data = "mean_cl_normal", geom = "pointrange", colour = blu) +
labs(x = "Biological sex", y = "Mark on exam (out of 20)") +
theme_minimal()
?stat_summary
ggplot(teach_tib, aes(sex, mark)) +
geom_point(size = 3, position = position_jitter(width = 0.05),  colour = ong, alpha = 0.7) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", colour = blu) +
labs(x = "Biological sex", y = "Mark on exam (out of 20)") +
theme_minimal()
ggplot(teach_tib, aes(sex, mark)) +
geom_point(size = 3, position = position_jitter(width = 0.05),  colour = ong, alpha = 0.7) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", colour = blu_dk) +
labs(x = "Biological sex", y = "Mark on exam (out of 20)") +
theme_minimal()
ggplot(teach_tib, aes(sex, mark)) +
geom_point(size = 3, position = position_jitter(width = 0.05),  colour = ong, alpha = 0.7) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", colour = blu_dk) +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Biological sex", y = "Mark on exam (out of 20)") +
theme_minimal()
ggplot(teach_tib, aes(sex, mark)) +
geom_point(size = 3, position = position_jitter(width = 0.05),  colour = ong, alpha = 0.7) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", colour = blu_dk) +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Biological sex", y = "Mark on exam (out of 20)") +
theme_minimal()
ggplot(teach_tib, aes(method, mark)) +
geom_point(size = 3, position = position_jitter(width = 0.05), colour = ong, alpha = 0.7) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", colour = blu_dk) +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Method of teaching", y = "Mark on exam (out of 20)") +
theme_minimal()
ggplot(teach_tib, aes(sex, mark, colour = method)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.1), size = 3, alpha = 0.6) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", colour = blu_dk) +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Biological sex", y = "Mark on SPSS exam (out of 20)", colour = "Method of teaching") +
discovr::scale_color_im() +
theme_minimal()
ggplot(teach_tib, aes(sex, mark, colour = method)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.1), size = 3, alpha = 0.6) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange") +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Biological sex", y = "Mark on SPSS exam (out of 20)", colour = "Method of teaching") +
discovr::scale_color_im() +
theme_minimal()
ggplot(teach_tib, aes(sex, mark, colour = method)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.1), size = 3, alpha = 0.6) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", position = position_dodge(width = 0.75)) +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Biological sex", y = "Mark on SPSS exam (out of 20)", colour = "Method of teaching") +
discovr::scale_color_im() +
theme_minimal()
ggplot(teach_tib, aes(sex, mark, colour = method)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.1), size = 2, alpha = 0.6) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", position = position_dodge(width = 0.75)) +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Biological sex", y = "Mark on SPSS exam (out of 20)", colour = "Method of teaching") +
discovr::scale_color_im() +
theme_minimal()
ggplot(teach_tib, aes(sex, mark, colour = method)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.1), size = 2, alpha = 0.6) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", position = position_dodge(width = 0.75)) +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Biological sex", y = "Mark on SPSS exam (out of 20)", colour = "Method of teaching") +
discovr::scale_color_killers() +
theme_minimal()
ggplot(teach_tib, aes(sex, mark, colour = method)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.1), size = 2, alpha = 0.6) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", position = position_dodge(width = 0.75)) +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Biological sex", y = "Mark on SPSS exam (out of 20)", colour = "Method of teaching") +
discovr::scale_color_pom() +
theme_minimal()
ggplot(teach_tib, aes(sex, mark, colour = method)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.1), size = 2, alpha = 0.6) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", position = position_dodge(width = 0.75)) +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Biological sex", y = "Mark on SPSS exam (out of 20)", colour = "Method of teaching") +
discovr::scale_color_nob() +
theme_minimal()
ggplot(teach_tib, aes(sex, mark, colour = method)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.1), size = 2, alpha = 0.6) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", position = position_dodge(width = 0.75)) +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Biological sex", y = "Mark on SPSS exam (out of 20)", colour = "Method of teaching") +
discovr::scale_color_sit() +
theme_minimal()
ggplot(teach_tib, aes(sex, mark, colour = method)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.1), size = 2, alpha = 0.6) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", position = position_dodge(width = 0.75)) +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Biological sex", y = "Mark on SPSS exam (out of 20)", colour = "Method of teaching") +
discovr::scale_color_prayer() +
theme_minimal()
ggplot(teach_tib, aes(sex, mark, colour = method)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.1), size = 2, alpha = 0.6, colour = grey) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", position = position_dodge(width = 0.75)) +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Biological sex", y = "Mark on SPSS exam (out of 20)", colour = "Method of teaching") +
discovr::scale_color_prayer() +
theme_minimal()
ggplot(teach_tib, aes(sex, mark, colour = method)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.1), size = 2, alpha = 0.6, fill = grey) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", position = position_dodge(width = 0.75)) +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Biological sex", y = "Mark on SPSS exam (out of 20)", colour = "Method of teaching") +
discovr::scale_color_prayer() +
theme_minimal()
ggplot(teach_tib, aes(sex, mark, colour = method)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.1), size = 2, alpha = 0.6) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", position = position_dodge(width = 0.75)) +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Biological sex", y = "Mark on SPSS exam (out of 20)", colour = "Method of teaching") +
discovr::scale_color_prayer() +
theme_minimal()
ggplot(teach_tib, aes(sex, mark, colour = method)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.1), size = 2, alpha = 0.3) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", position = position_dodge(width = 0.75)) +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Biological sex", y = "Mark on SPSS exam (out of 20)", colour = "Method of teaching") +
discovr::scale_color_prayer() +
theme_minimal()
ggplot(teach_tib, aes(sex, mark, colour = method)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2), size = 2, alpha = 0.3) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", position = position_dodge(width = 0.75)) +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Biological sex", y = "Mark on SPSS exam (out of 20)", colour = "Method of teaching") +
discovr::scale_color_prayer() +
theme_minimal()
ggplot(teach_tib, aes(sex, mark, colour = method)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.3), size = 2, alpha = 0.3) +
stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", position = position_dodge(width = 0.75)) +
coord_cartesian(ylim = c(0, 20)) +
labs(x = "Biological sex", y = "Mark on SPSS exam (out of 20)", colour = "Method of teaching") +
discovr::scale_color_prayer() +
theme_minimal()
escape_tib <- discovr::escape
escape_tib
ggplot2::ggplot(escape_tib, aes(x = song_type, y = screams, colour = songwriter)) +
geom_violin(alpha = 0.5) +
stat_summary(fun.data = "mean_cl_normal", position = position_dodge(width = 0.9)) +
scale_y_continuous(breaks = seq(0, 100, 10)) +
labs(y = "Number of screams during playback", x = "Song subject matter", colour = "Composer") +
discovr::scale_colour_pom() +
theme_minimal()
ggplot2::ggplot(escape_tib, aes(x = song_type, y = screams, colour = songwriter)) +
geom_violin(alpha = 0.5) +
stat_summary(fun.data = "mean_cl_normal", position = position_dodge(width = 0.9)) +
scale_y_continuous(breaks = seq(0, 15, 1)) +
labs(y = "Number of screams during playback", x = "Song type", colour = "Composer") +
discovr::scale_colour_pom() +
theme_minimal()
ggplot2::ggplot(escape_tib, aes(x = song_type, y = screams, colour = songwriter)) +
geom_violin(alpha = 0.5) +
stat_summary(fun.data = "mean_cl_normal", position = position_dodge(width = 0.9)) +
coord_cartesian(ylims = c(0, 15)) +
scale_y_continuous(breaks = seq(0, 15, 1)) +
labs(y = "Number of screams during playback", x = "Song type", colour = "Composer") +
discovr::scale_colour_pom() +
theme_minimal()
ggplot2::ggplot(escape_tib, aes(x = song_type, y = screams, colour = songwriter)) +
geom_violin(alpha = 0.5) +
stat_summary(fun.data = "mean_cl_normal", position = position_dodge(width = 0.9)) +
coord_cartesian(ylim = c(0, 15)) +
scale_y_continuous(breaks = seq(0, 15, 1)) +
labs(y = "Number of screams during playback", x = "Song type", colour = "Composer") +
discovr::scale_colour_pom() +
theme_minimal()
escape_afx <- afex::aov_4(screams ~ song_type*songwriter + (1|id), data = escape_tib)
escape_afx
contrasts(escape_tib$song_type) <- contr.sum(2)
contrasts(escape_tib$songwriter) <- contr.sum(2)
escape_lm <- lm(screams ~ song_type*songwriter, data = escape_tib)
car::Anova(escape_lm, type = 3)
report_f(escape_car, index = 3)
escape_lm <- lm(screams ~ song_type*songwriter, data = escape_tib)
escape_car <- car::Anova(escape_lm, type = 3)
report_f(escape_car, index = 3)
emmeans::emmeans(escape_afx, "songwriter")
report_f(escape_car, index = 2)
report_f(escape_car, index = 4)
emmeans::emmeans(escape_afx, "song_type")
emmeans::joint_tests(escape_afx, "song_type")
effectsize::omega_squared(escape_afx, ci = 0.95, partial = FALSE)
report_f(escape_car, index = 2)
report_omega(model = escape_afx, index = 1)
report_f(escape_car, index = 4)
report_omega(model = escape_afx, index = 1)
report_omega(model = escape_afx, index = 3)
switch_tib <- discovr::switch
switch_afx <- afex::aov_4(injury ~ athlete*stretch*switch + (1|id), data = switch_tib)
switch_afx
contrasts(switch_tib$athlete) <- contr.sum(2)
contrasts(switch_tib$stretch) <- contr.sum(2)
contrasts(switch_tib$switch) <- contr.sum(2)
switch_lm <- lm(injury ~ athlete*stretch*switch, data = switch_tib)
car::Anova(switch_lm, type = 3)
switch_lm <- lm(injury ~ athlete*stretch*switch, data = switch_tib)
switch_car <- car::Anova(switch_lm, type = 3)
report_f(switch_car, index = 2)
emmeans::emmeans(switch_afx, "athlete")
report_f(switch_car, index = 3)
report_f(switch_car, index = 3)
report_f(switch_car, index = 4)
report_f(switch_car, index = 5)
report_f(switch_car, index = 5)
report_f(switch_car, index = 6)
report_f(switch_car, index = 7)
report_f(switch_car, index = 7)
report_f(switch_car, index = 8)
emmeans::emmeans(switch_afx, "stretch")
emmeans::emmeans(switch_afx, "switch")
ggplot(switch, aes(athlete, injury, colour = stretch)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2), size = 3, alpha = 0.7) +
geom_boxplot(alpha = 0) +
labs(x = "Athlete or not", y = "Injury score (out of 10)", colour = "Stretching before play") +
discovr::scale_color_virtual() +
coord_cartesian(ylim = c(0, 10)) +
scale_y_continuous(breaks = seq(0, 10, 2)) +
theme_minimal()
ggplot(switch, aes(athlete, injury, colour = stretch)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2), size = 3, alpha = 0.7) +
stat_summary(fun.data = "mean_cl_normal", position = position_dodge(width = 0.75)) +
labs(x = "Athlete or not", y = "Injury score (out of 10)", colour = "Stretching before play")
ggplot(switch_tib, aes(athlete, injury, colour = stretch)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2), size = 3, alpha = 0.7) +
stat_summary(fun.data = "mean_cl_normal", position = position_dodge(width = 0.75)) +
labs(x = "Athlete or not", y = "Injury score (out of 10)", colour = "Stretching before play") +
discovr::scale_color_virtual() +
coord_cartesian(ylim = c(0, 10)) +
scale_y_continuous(breaks = seq(0, 10, 2)) +
theme_minimal()
ggplot(switch_tib, aes(athlete, injury, colour = stretch)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2), size = 2, alpha = 0.2) +
stat_summary(fun.data = "mean_cl_normal", position = position_dodge(width = 0.75)) +
labs(x = "Athlete or not", y = "Injury score (out of 10)", colour = "Stretching before play") +
discovr::scale_color_virtual() +
coord_cartesian(ylim = c(0, 10)) +
scale_y_continuous(breaks = seq(0, 10, 2)) +
theme_minimal()
ggplot(switch_tib, aes(athlete, injury, colour = stretch)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2), size = 2, alpha = 0.2) +
stat_summary(fun.data = "mean_cl_normal", position = position_dodge(width = 0.75)) +
labs(x = "Athlete or not", y = "Injury score (out of 10)", colour = "Stretching before play") +
discovr::scale_color_prayer() +
coord_cartesian(ylim = c(0, 10)) +
scale_y_continuous(breaks = seq(0, 10, 2)) +
theme_minimal()
ggplot(switch_tib, aes(athlete, injury, colour = stretch)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2), size = 1, alpha = 0.2) +
stat_summary(fun.data = "mean_cl_normal", position = position_dodge(width = 0.75)) +
labs(x = "Athlete or not", y = "Injury score (out of 10)", colour = "Stretching before play") +
discovr::scale_color_prayer() +
coord_cartesian(ylim = c(0, 10)) +
scale_y_continuous(breaks = seq(0, 10, 2)) +
theme_minimal()
ggplot(switch_tib, aes(athlete, injury, colour = switch)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2), size = 1, alpha = 0.2) +
stat_summary(fun.data = "mean_cl_normal", position = position_dodge(width = 0.75)) +
labs(x = "Athlete or not", y = "Injury score (out of 10)", colour = "Playing or watching") +
scale_color_manual(values = c(cbBlue, cbOrange)) +
coord_cartesian(ylim = c(0, 10)) +
scale_y_continuous(breaks = seq(0, 10, 2)) +
theme_minimal()
ggplot(switch_tib, aes(athlete, injury, colour = switch)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2), size = 1, alpha = 0.2) +
stat_summary(fun.data = "mean_cl_normal", position = position_dodge(width = 0.75)) +
labs(x = "Athlete or not", y = "Injury score (out of 10)", colour = "Playing or watching") +
discovr::scale_color_prayer() +
coord_cartesian(ylim = c(0, 10)) +
scale_y_continuous(breaks = seq(0, 10, 2)) +
theme_minimal()
ggplot(switch_tib, aes(stretch, injury, colour = switch)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2), size = 1, alpha = 0.2) +
stat_summary(fun.data = "mean_cl_normal", position = position_dodge(width = 0.75)) +
labs(x = "Stretching before play", y = "Injury score (out of 10)", colour = "Playing or watching") +
discovr::scale_color_prayer() +
coord_cartesian(ylim = c(0, 10)) +
scale_y_continuous(breaks = seq(0, 10, 2)) +
theme_minimal()
ggplot(switch_tib, aes(switch, injury, colour = stretch)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2), size = 1, alpha = 0.2) +
stat_summary(fun.data = "mean_cl_normal", position = position_dodge(width = 0.75)) +
facet_wrap(~athlete) +
labs(x = "Playing or watching", y = "Injury score (out of 10)", colour = "Stretching before play") +
discovr::scale_color_prayer() +
coord_cartesian(ylim = c(0, 10)) +
scale_y_continuous(breaks = seq(0, 10, 2)) +
theme_minimal() +
theme(axis.text.x = element_text(size = rel(0.8)))
xbox_tib <- discovr::xbox
xbox_tib
xbox_afx <- afex::aov_4(injury ~ game*console + (1|id), data = xbox_tib)
xbox_afx
contrasts(xbox_tib$game) <- contr.sum(2)
contrasts(xbox_tib$console) <- contr.sum(2)
xbox_lm <- lm(injury ~ game*console, data = xbox_tib)
car::Anova(xbox_lm, type = 3)
report_f(xbox_car, index = 2)
xbox_lm <- lm(injury ~ game*console, data = xbox_tib)
xbox_car <- car::Anova(xbox_lm, type = 3)
eport_f(xbox_car, index = 2)
report_f(xbox_car, index = 2)
emmeans::emmeans(switch_afx, "game")
emmeans::emmeans(xbox_afx, "game")
report_f(xbox_car, index = 3)
emmeans::emmeans(xbox_afx, "console")
report_f(xbox_car, index = 4)
ggplot(xbox_tib, aes(console, injury, colour = game)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2), size = 1, alpha = 0.2) +
stat_summary(fun.data = "mean_cl_normal", position = position_dodge(width = 0.75)) +
labs(x = "Games console", y = "Injury score (out of 10)", colour = "Type of game") +
discovr::scale_color_prayer() +
coord_cartesian(ylim = c(0, 20)) +
scale_y_continuous(breaks = seq(0, 10, 2)) +
theme_minimal()
ggplot(xbox_tib, aes(console, injury, colour = game)) +
geom_point(position = position_jitterdodge(dodge.width = 0.75, jitter.width = 0.2), size = 1, alpha = 0.2) +
stat_summary(fun.data = "mean_cl_normal", position = position_dodge(width = 0.75)) +
labs(x = "Games console", y = "Injury score (out of 10)", colour = "Type of game") +
discovr::scale_color_prayer() +
coord_cartesian(ylim = c(0, 20)) +
scale_y_continuous(breaks = seq(0, 20, 2)) +
theme_minimal()
emmeans::joint_tests(xbox_afx, "game")
emmeans::joint_tests(xbox_afx, "console")
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
x <- switch_car$`Pr(>F)`[2]
x
x <- switch_car$`Pr(>F)`[2]
dp <- 2
if(x < 0.001){
"< .001"
} else {
as.character(round(x, dp))
}
x <- switch_car$`Pr(>F)`[3]
x
if(x < 0.001){
"< .001"
} else {
paste0("= ", as.character(round(x, dp))
}
if(x < 0.001){
"< .001"
} else {
paste0("= ", as.character(round(x, dp)))
}
if(x < 0.001){
"< .001"
} else {
paste0("= ", round(x, dp))
}
round(x, dp)
x
dp <- 3
if(x < 0.001){
"< .001"
} else {
paste0("= ", round(x, dp))
}
x <- switch_car$`Pr(>F)`[4]
dp <- 3
if(x < 0.001){
"< .001"
} else {
paste0("= ", round(x, dp))
}
report_f <- function(x, index = 2, dp = 2){
last <- length(x$Df)
paste0("*F*(", x$Df[index], ", ", x$Df[last], ") = ", round(x$`F value`[index], dp), ", *p* ", round_p(x$`Pr(>F)`[index]))
}
report_f(switch_car, 1)
round_p <- function(x, dp = 3){
if(x < 0.001){
"< .001"
} else {
paste0("= ", round(x, dp))
}
}
report_f <- function(x, index = 2, dp = 2){
last <- length(x$Df)
paste0("*F*(", x$Df[index], ", ", x$Df[last], ") = ", round(x$`F value`[index], dp), ", *p* ", round_p(x$`Pr(>F)`[index]))
}
report_f(switch_car, 1)
report_f(switch_car, 2)
report_f(switch_car, 3)
report_f(switch_car, 4)
report_f(switch_car, 5)
round_p <- function(x, dp = 3){
if(x < 0.001){
"< .001"
} else if(x < 0.01) {
"< .01"
} else {
paste0("= ", round(x, dp))
}
}
report_f(switch_car, 5)
report_f(switch_car, 4)
report_f(switch_car, 3)
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
